{"version":3,"sources":["services/commits/commits.service.tsx","components/home/Commits/Commits.styles.tsx","components/home/Commits/Commits.tsx","services/commits/commits.service.hooks.ts","components/home/Home/Home.styles.tsx","components/home/Home/Home.tsx","pages/Home.page.tsx","index.tsx"],"names":["fetchCommits","a","axios","get","data","Error","message","CommitsStyled","styled","div","Commits","props","useQuery","enabled","commits","isLoading","className","map","commitInfo","commit","defaultProps","HomeStyled","Home","queryClientRef","useRef","current","QueryClient","defaultOptions","queries","refetchOnWindowFocus","QueryClientProvider","client","ReactDOM","render","document","getElementById"],"mappings":"2PAUaA,EAAY,uCAAG,8BAAAC,EAAA,4DAExB,qEAFwB,kBAKDC,IAAMC,IAH7B,sEAFwB,uBAKhBC,EALgB,EAKhBA,KALgB,kBAOjBA,GAPiB,sCASlB,IAAIC,MAAM,KAAMC,SATE,yDAAH,qD,gBCGVC,EAROC,IAAOC,IAAV,qE,OCGbC,EAA2B,SAACC,GAChC,MCCOC,YAAS,CAAC,YAAY,kBAAMZ,MAAgB,CACjDa,SAAS,IDFGC,EAAd,EAAQV,KAAeW,EAAvB,EAAuBA,UAEvB,OACE,eAAC,EAAD,CAAQC,UAAU,UAAlB,UACE,yCAECD,EAAY,2CAAoB,KAEjC,oCACGD,QADH,IACGA,OADH,EACGA,EAASG,KAAI,SAACC,GACb,IAAQC,EAAWD,EAAXC,OAER,OAAO,6BAAKA,EAAOb,mBAO7BI,EAAQU,aAAe,GAERV,I,EAAAA,IElBAW,EARIb,IAAOC,IAAV,iECKVa,EAAwB,SAACX,GAC7B,IAAMY,EAAiBC,mBAYvB,OAVKD,EAAeE,UAClBF,EAAeE,QAAU,IAAIC,IAAY,CACvCC,eAAgB,CACdC,QAAS,CACPC,sBAAsB,OAO5B,cAACC,EAAA,EAAD,CAAqBC,OAAQR,EAAeE,QAA5C,SACE,cAAC,EAAD,CAAQT,UAAU,OAAlB,SACE,cAAC,EAAD,SAMRM,EAAKF,aAAe,GAELE,IC/BAA,ED+BAA,E,MEzBfU,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.263b27f4.chunk.js","sourcesContent":["// Commits services\r\nimport axios from \"axios\";\r\n\r\n// Types\r\nimport { Commit } from \"./commits.service.types\";\r\n\r\n/** Service to get commits data.\r\n *\r\n * @returns {Promise<Commit>} Returns a promise with the result of the commits data\r\n */\r\nexport const fetchCommits = async (): Promise<Commit[]> => {\r\n  const url =\r\n    \"https://api.github.com/repos/gabiprds93/git-commit-history/commits\";\r\n\r\n  try {\r\n    const { data } = await axios.get(url);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Types\r\nimport { CommitsStyledProps as Props } from \"./Commits.types\";\r\n\r\nconst CommitsStyled = styled.div<Props>`\r\n  &.Commits {\r\n  }\r\n\r\n  .Commits {\r\n  }\r\n`;\r\n\r\nexport default CommitsStyled;\r\n","import React from \"react\";\r\n\r\n//Services\r\nimport { useFetchCommits } from \"../../../services/commits/commits.service.hooks\";\r\n// Types, Styles\r\nimport { CommitsProps as Props } from \"./Commits.types\";\r\nimport Styles from \"./Commits.styles\";\r\n\r\nconst Commits: React.FC<Props> = (props) => {\r\n  const { data: commits, isLoading } = useFetchCommits();\r\n\r\n  return (\r\n    <Styles className=\"Commits\">\r\n      <h1>Commits</h1>\r\n\r\n      {isLoading ? <p>Loading...</p> : null}\r\n\r\n      <ul>\r\n        {commits?.map((commitInfo) => {\r\n          const { commit } = commitInfo;\r\n\r\n          return <li>{commit.message}</li>;\r\n        })}\r\n      </ul>\r\n    </Styles>\r\n  );\r\n};\r\n\r\nCommits.defaultProps = {};\r\n\r\nexport default Commits;\r\n","import { useQuery } from \"react-query\";\r\n\r\n// Services\r\nimport { fetchCommits } from \"./commits.service\";\r\n\r\n/** Hook to get commits information.\r\n *\r\n * @returns {UseQueryResult} Returns a use query result with the commits information\r\n */\r\nexport const useFetchCommits = () => {\r\n  return useQuery([\"commits\"], () => fetchCommits(), {\r\n    enabled: true,\r\n  });\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { HomeStyledProps as Props } from \"./Home.types\";\r\n\r\nconst HomeStyled = styled.div<Props>`\r\n  &.Home {\r\n  }\r\n  \r\n  .Home {\r\n  }\r\n`;\r\n\r\nexport default HomeStyled;\r\n","import React, { useRef } from \"react\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\n\r\n// Components\r\nimport Commits from \"../Commits/Commits\";\r\n// Types, Styles\r\nimport { HomeProps as Props } from \"./Home.types\";\r\nimport Styles from \"./Home.styles\";\r\n\r\nconst Home: React.FC<Props> = (props) => {\r\n  const queryClientRef = useRef<QueryClient>();\r\n\r\n  if (!queryClientRef.current) {\r\n    queryClientRef.current = new QueryClient({\r\n      defaultOptions: {\r\n        queries: {\r\n          refetchOnWindowFocus: true,\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClientRef.current}>\r\n      <Styles className=\"Home\">\r\n        <Commits />\r\n      </Styles>\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n\r\nHome.defaultProps = {};\r\n\r\nexport default Home;\r\n","import Home from \"../components/home/Home/Home\";\r\n\r\nexport default Home;","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// Pages\nimport Home from \"./pages/Home.page\";\n// Styles\nimport \"./styles/base.css\";\n\nReactDOM.render(\n  <StrictMode>\n    <Home />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}